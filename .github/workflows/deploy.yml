name: Build & Deploy .NET App to Windows VM via WinRM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: windows-latest

    env:
      host: ${{ secrets.VM_HOST }}
      username: ${{ secrets.VM_USERNAME }}
      password: ${{ secrets.VM_PASSWORD }}
      DEPLOY_PATH: C:\inetpub\wwwroot\Manatalol
      TEMP_PATH: C:\manatalol
      SITE_NAME: "Manatalol"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build and Publish
        shell: pwsh
        run: |
          Write-Host "üì¶ Publishing project..."
          dotnet restore Manatalol/Manatalol.App/Manatalol.App.csproj
          dotnet build Manatalol/Manatalol.App/Manatalol.App.csproj -c Release --no-restore
          dotnet publish Manatalol/Manatalol.App/Manatalol.App.csproj -c Release -o ./output/published
          Write-Host "‚úÖ Build & publish completed."

      - name: Package app
        shell: pwsh
        run: |
          Write-Host "Creating ZIP package..."
          if (!(Test-Path $env:TEMP_PATH)) { New-Item -ItemType Directory -Path $env:TEMP_PATH | Out-Null }
          Compress-Archive -Path ./output/published/* -DestinationPath "$($env:TEMP_PATH)\Manatalol.zip" -Force
          Write-Host "‚úÖ Package created at $($env:TEMP_PATH)\Manatalol.zip"

      - name: Deploy to VM
        shell: pwsh
        run: |
          Write-Host "Starting deployment to $env:VM_HOST..."
          $secpasswd = ConvertTo-SecureString $env:VM_PASSWORD -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential ($env:VM_USERNAME, $secpasswd)

          # Create remote session
          Write-Host "Creating PowerShell session..."
          $session = New-PSSession -ComputerName $env:VM_HOST -Credential $cred -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck) -ErrorAction Stop

          # Copy package
          Write-Host "Copying ZIP to remote machine..."
          Copy-Item -Path "$($env:TEMP_PATH)\Manatalol.zip" -Destination "$($env:TEMP_PATH)\Manatalol.zip" -ToSession $session -Force

          # Deploy and extract
          Write-Host "Extracting package on remote VM..."
          Invoke-Command -Session $session -ScriptBlock {
              param($deployPath, $zipPath, $siteName)
              if (Test-Path $deployPath) { Remove-Item -Recurse -Force $deployPath }
              New-Item -ItemType Directory -Force -Path $deployPath | Out-Null
              Expand-Archive -Path $zipPath -DestinationPath $deployPath -Force

              # Restart IIS site
              if (Get-Website -Name $siteName -ErrorAction SilentlyContinue) {
                  Write-Host "üîÑ Restarting IIS site $siteName..."
                  Stop-Website -Name $siteName
                  Start-Website -Name $siteName
              } else {
                  Write-Host "‚ö†Ô∏è IIS site $siteName not found."
              }
              Write-Host "‚úÖ Deployment completed."
          } -ArgumentList $env:DEPLOY_PATH, "$($env:TEMP_PATH)\Manatalol.zip", $env:SITE_NAME

          # Close session
          Remove-PSSession $session
          Write-Host "üöÄ Deployment finished successfully."