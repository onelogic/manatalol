name: Build & Deploy .NET App to Windows VM via SSH

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load environment variables
        id: envload
        run: |
          if [ -f .env ]; then
            echo "Chargement du fichier .env"
            while IFS='=' read -r name value; do
              if [[ ! $name =~ ^# && -n $name ]]; then
                echo "$name=$value" >> $GITHUB_ENV
              fi
            done < .env
          fi

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build and Publish
        run: |
          dotnet restore Manatalol/Manatalol.App/Manatalol.App.csproj
          dotnet publish Manatalol/Manatalol.App/Manatalol.App.csproj -c Release -o ./output/published

      - name: Package app
        run: zip -r Manatalol.zip ./output/published

      - name: Upload package to VM via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USERNAME }}
          password: ${{ env.VM_PASSWORD }}
          source: "Manatalol.zip"
          target: C:/manatalol/

      - name: Deploy & Restart service
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USERNAME }}
          password: ${{ env.VM_PASSWORD }}
          script_stop: true
          script: |
            Write-Host "📦 Déploiement sur la VM Windows..."
            $deployPath = "C:\inetpub\Manatalol"
            $zipPath = "C:\temp\Manatalol.zip"
            $serviceName = "ManatalolService"

            if (Test-Path $deployPath) { Remove-Item -Recurse -Force $deployPath }
            New-Item -ItemType Directory -Force -Path $deployPath | Out-Null

            Expand-Archive -Path $zipPath -DestinationPath $deployPath -Force
            Write-Host "✅ Application déployée dans $deployPath"

            if (Get-Service -Name $serviceName -ErrorAction SilentlyContinue) {
              Write-Host "🔄 Redémarrage du service $serviceName..."
              Restart-Service -Name $serviceName -Force
            } else {
              Write-Host "⚠️ Service $serviceName introuvable, aucun redémarrage effectué."
            }

            Write-Host "🚀 Déploiement terminé avec succès."
