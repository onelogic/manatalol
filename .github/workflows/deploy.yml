name: Build & Deploy .NET App to Windows VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load .env variables
        shell: pwsh
        run: |
          Write-Host "Loading .env variables..."
          if (Test-Path ".env") {
              Get-Content .env | ForEach-Object {
                  if ($_ -match '^\s*$') { return }
                  $parts = $_ -split '=', 2
                  echo "$($parts[0])=$($parts[1])" >> $env:GITHUB_ENV
              }
          } else {
              Write-Host ".env file not found!"
              exit 1
          }

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Build and Publish
        shell: pwsh
        run: |
          Write-Host "Publishing project..."
          dotnet restore Manatalol/Manatalol.App/Manatalol.App.csproj
          dotnet build Manatalol/Manatalol.App/Manatalol.App.csproj -c Release --no-restore
          dotnet publish Manatalol/Manatalol.App/Manatalol.App.csproj -c Release -o ./output/published
          Write-Host "Build & publish completed."

      - name: Copy package to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USERNAME }}
          password: ${{ env.VM_PASSWORD }}
          source: "./output/published/*"
          target: "C:/inetpub/wwwroot/Manatalol"
          strip_components: 0

      - name: Configure IIS and Subdomain
        shell: pwsh
        run: |
          Write-Host "Installing IIS features..."
          Install-WindowsFeature -Name Web-Server, Web-WebServer, Web-Common-Http, Web-Default-Doc, Web-Static-Content, Web-ASP-Net45 -IncludeManagementTools

          $siteName = "Manatalol"
          $physicalPath = "C:\inetpub\wwwroot\Manatalol"
          $subDomain = $env:SUBDOMAIN
          $bindingPort = 80
          $ipAddress = "*"

          # Create site if it doesn't exist
          if (-not (Get-Website -Name $siteName -ErrorAction SilentlyContinue)) {
              Write-Host "Creating IIS site $siteName..."
              New-Website -Name $siteName -Port $bindingPort -IPAddress $ipAddress -HostHeader $subDomain -PhysicalPath $physicalPath
          } else {
              Write-Host "Site $siteName already exists. Updating physical path..."
              Set-ItemProperty "IIS:\Sites\$siteName" -Name physicalPath -Value $physicalPath
          }

          Write-Host "Restarting IIS site..."
          if ((Get-Website -Name $siteName).State -eq "Started") {
              Stop-Website -Name $siteName
          }
          Start-Website -Name $siteName

          Write-Host "Deployment completed! Site $siteName is now live at $subDomain"