name: Build & Deploy .NET App to Windows VM via WinRM (HTTPS)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    outputs:
      artifact_path: ${{ steps.package.outputs.zip_path }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load .env variables
        shell: pwsh
        run: |
          Write-Host "Loading .env variables..."
          if (Test-Path ".env") {
              Get-Content .env | ForEach-Object {
                  if ($_ -match '^\s*$') { return }
                  $parts = $_ -split '=', 2
                  echo "$($parts[0])=$($parts[1])" >> $env:GITHUB_ENV
              }
          } else {
              Write-Host ".env file not found!"
              exit 1
          }

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Build & Publish
        shell: pwsh
        run: |
          dotnet restore Manatalol/Manatalol.App/Manatalol.App.csproj
          dotnet publish Manatalol/Manatalol.App/Manatalol.App.csproj -c Release -o ./output/published
          Write-Host "Build & publish completed."

      - name: Package app
        id: package
        shell: pwsh
        run: |
          $zipPath = "$env:GITHUB_WORKSPACE\Manatalol.zip"
          if (Test-Path $zipPath) { Remove-Item $zipPath -Force }
          Compress-Archive -Path "./output/published/*" -DestinationPath $zipPath -Force
          Write-Host "Package created at $zipPath"
          echo "zip_path=$zipPath" >> $env:GITHUB_OUTPUT

  deploy:
    runs-on: windows-latest
    needs: build
    env:
      VM_HOST: ${{ secrets.VM_HOST }}
      VM_USERNAME: ${{ secrets.VM_USERNAME }}
      VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
      SUBDOMAIN: ${{ secrets.SUBDOMAIN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure package exists
        shell: pwsh
        run: |
          $zipPath = "$env:GITHUB_WORKSPACE\Manatalol.zip"
          if (-Not (Test-Path $zipPath)) {
              Write-Error "Package $zipPath not found. Make sure the build created the zip."
              exit 1
          } else {
              Write-Host "Package found: $zipPath"
          }

      - name: Deploy to Windows VM via WinRM HTTPS
        shell: pwsh
        run: |
          Write-Host "Starting remote deployment via WinRM (HTTPS)..."

          # Credentials
          $secpasswd = ConvertTo-SecureString $env:VM_PASSWORD -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential ($env:VM_USERNAME, $secpasswd)

          # Create HTTPS session
          $session = New-PSSession -ComputerName $env:VM_HOST `
                                   -Credential $cred `
                                   -Port 5986 `
                                   -UseSSL `
                                   -Authentication Basic `
                                   -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck)

          # Ensure target folder exists
          $deployPath = "C:\inetpub\wwwroot\Manatalol"
          Invoke-Command -Session $session -ScriptBlock {
              param($path)
              if (-Not (Test-Path $path)) {
                  New-Item -ItemType Directory -Force -Path $path | Out-Null
              }
          } -ArgumentList $deployPath

          # Copy ZIP to VM
          Copy-Item -Path "$env:GITHUB_WORKSPACE\Manatalol.zip" -Destination "$deployPath\Manatalol.zip" -ToSession $session -Force

          # Extract ZIP
          Invoke-Command -Session $session -ScriptBlock {
              param($zipPath, $deployPath)
              Expand-Archive -Path $zipPath -DestinationPath $deployPath -Force
          } -ArgumentList "$deployPath\Manatalol.zip", $deployPath

          # Configure IIS
          Invoke-Command -Session $session -ScriptBlock {
              param($siteName, $deployPath, $subDomain)
              Import-Module WebAdministration
              if (-not (Get-Website -Name $siteName -ErrorAction SilentlyContinue)) {
                  New-Website -Name $siteName -Port 80 -PhysicalPath $deployPath -HostHeader $subDomain
              } else {
                  Set-ItemProperty "IIS:\Sites\$siteName" -Name physicalPath -Value $deployPath
              }
              Restart-WebAppPool -Name "DefaultAppPool"
              Restart-Service W3SVC
          } -ArgumentList "Manatalol", $deployPath, $env:SUBDOMAIN

          # Close session
          Remove-PSSession $session
          Write-Host "Deployment finished successfully!"