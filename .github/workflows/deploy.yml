name: Build & Deploy .NET App to Windows Server

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build .NET app
    runs-on: windows-latest
    outputs:
      artifact_path: ${{ steps.publish.outputs.artifact_path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore, Build and Publish
        id: publish
        shell: pwsh
        run: |
          Write-Host "Building and publishing project..."
          dotnet restore Manatalol/Manatalol.App/Manatalol.App.csproj
          dotnet publish Manatalol/Manatalol.App/Manatalol.App.csproj -c Release -o ./output/published
          Write-Host "artifact_path=output/published" >> $env:GITHUB_OUTPUT

      - name: Upload published artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ./output/published/

  deploy:
    name: Deploy to Windows Server
    runs-on: windows-latest
    needs: build
    env:
      VM_HOST: ${{ secrets.VM_HOST }}
      VM_USERNAME: ${{ secrets.VM_USERNAME }}
      VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
      SUBDOMAIN: ${{ secrets.SUBDOMAIN }}

    steps:
      - name: Download published artifact
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: ./output/published

      - name: Deploy via WinRM HTTPS
        shell: pwsh
        run: |
          Write-Host "Starting remote deployment via WinRM (HTTPS)..."

          $vmHost = "${{ env.VM_HOST }}"
          $vmUser = "${{ env.VM_USERNAME }}"
          $vmPass = "${{ env.VM_PASSWORD }}"
          $subDomain = "${{ env.SUBDOMAIN }}"

          $secpasswd = ConvertTo-SecureString $vmPass -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential ($vmUser, $secpasswd)

          $sessionOptions = New-PSSessionOption -SkipCACheck -SkipCNCheck -OperationTimeout 60000
          $session = New-PSSession -ComputerName $vmHost -Credential $cred -UseSSL -Port 5986 -SessionOption $sessionOptions

          Invoke-Command -Session $session -ScriptBlock {
              param($subDomain)

              $path = "C:\inetpub\wwwroot\Manatalol"
              if (-not (Test-Path $path)) {
                  New-Item -ItemType Directory -Path $path | Out-Null
              }

              Write-Host "Deploying files..."
              Copy-Item -Path "$env:GITHUB_WORKSPACE\output\published\*" -Destination $path -Recurse -Force

              Write-Host "Configuring IIS..."
              Import-Module WebAdministration
              if (-not (Get-Website -Name "Manatalol" -ErrorAction SilentlyContinue)) {
                  New-Website -Name "Manatalol" -Port 80 -PhysicalPath $path -HostHeader $subDomain
              } else {
                  Set-ItemProperty "IIS:\Sites\Manatalol" -Name physicalPath -Value $path
              }

              Restart-WebAppPool -Name "DefaultAppPool"
              Restart-Service W3SVC
          } -ArgumentList $subDomain

          Remove-PSSession $session
          Write-Host "Deployment completed successfully!"