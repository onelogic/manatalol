name: Build & Deploy .NET App to Windows VM

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load .env variables
        shell: pwsh
        run: |
          Write-Host "Loading .env variables..."
          if (Test-Path ".env") {
              Get-Content .env | ForEach-Object {
                  if ($_ -match '^\s*$') { return }
                  $parts = $_ -split '=', 2
                  echo "$($parts[0])=$($parts[1])" >> $env:GITHUB_ENV
              }
          } else {
              Write-Host ".env file not found!"
              exit 1
          }

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Build & Publish
        shell: pwsh
        run: |
          dotnet restore Manatalol/Manatalol.App/Manatalol.App.csproj
          dotnet publish Manatalol/Manatalol.App/Manatalol.App.csproj -c Release -o ./output/published
          $zipPath = "$env:GITHUB_WORKSPACE\Manatalol.zip"
          Compress-Archive -Path ./output/published/* -DestinationPath $zipPath -Force
          Write-Host "Artifact created at $zipPath"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ${{ github.workspace }}\Manatalol.zip

  deploy:
    runs-on: windows-latest
    needs: build
    env:
      VM_HOST: ${{ secrets.VM_HOST }}
      VM_USERNAME: ${{ secrets.VM_USERNAME }}
      VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
      SUBDOMAIN: ${{ secrets.SUBDOMAIN }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: ${{ github.workspace }}

      - name: Deploy to Windows VM via WinRM HTTPS
        shell: pwsh
        run: |
          if (-not $env:VM_HOST -or -not $env:VM_USERNAME -or -not $env:VM_PASSWORD -or -not $env:SUBDOMAIN) {
              Write-Error "Missing environment variables. Check your GitHub Secrets!"
              exit 1
          }

          Write-Host "Starting remote deployment via WinRM (HTTPS)..."

          $vmHost = $env:VM_HOST
          $vmUser = $env:VM_USERNAME
          $vmPass = $env:VM_PASSWORD
          $subDomain = $env:SUBDOMAIN
          $zipPath = "$env:GITHUB_WORKSPACE\Manatalol.zip"
          $deployPath = "C:\inetpub\wwwroot\Manatalol"

          if (-not (Test-Path $zipPath)) {
              Write-Error "Package $zipPath not found. Make sure the build created the zip."
              exit 1
          }

          $secpasswd = ConvertTo-SecureString $vmPass -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential ($vmUser, $secpasswd)

          $sessionOptions = New-PSSessionOption -SkipCACheck -SkipCNCheck
          $session = New-PSSession -ComputerName $vmHost -Credential $cred -Port 5986 -UseSSL -Authentication Basic -SessionOption $sessionOptions

          # Copy ZIP
          Copy-Item -Path $zipPath -Destination $deployPath -ToSession $session -Force

          # Extract and configure IIS
          Invoke-Command -Session $session -ScriptBlock {
              param($deployPath, $subDomain)
              Import-Module WebAdministration

              if (-not (Test-Path $deployPath)) { New-Item -ItemType Directory -Force -Path $deployPath | Out-Null }
              Expand-Archive -Path "$deployPath\Manatalol.zip" -DestinationPath $deployPath -Force

              $siteName = "Manatalol"
              if (-not (Get-Website -Name $siteName -ErrorAction SilentlyContinue)) {
                  New-Website -Name $siteName -Port 80 -PhysicalPath $deployPath -HostHeader $subDomain
              } else {
                  Set-ItemProperty "IIS:\Sites\$siteName" -Name physicalPath -Value $deployPath
              }

              Restart-WebAppPool -Name "DefaultAppPool"
              Restart-Service W3SVC
          } -ArgumentList $deployPath, $subDomain

          Remove-PSSession $session
          Write-Host "Deployment finished successfully!"
