name: Build & Deploy .NET App to Windows VM

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    outputs:
      artifact_path: ${{ steps.publish.outputs.artifact_path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load .env variables
        shell: pwsh
        run: |
          Write-Host "Loading .env variables..."
          if (Test-Path ".env") {
              Get-Content .env | ForEach-Object {
                  if ($_ -match '^\s*$') { return }
                  $parts = $_ -split '=', 2
                  echo "$($parts[0])=$($parts[1])" >> $env:GITHUB_ENV
              }
          } else {
              Write-Host ".env file not found!"
              exit 1
          }

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Build & Publish
        id: publish
        shell: pwsh
        run: |
          dotnet restore Manatalol/Manatalol.App/Manatalol.App.csproj
          dotnet publish Manatalol/Manatalol.App/Manatalol.App.csproj -c Release -o ./output/published
          Write-Host "artifact_path=output/published" >> $env:GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ./output/published

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: ./output/published

      - name: Load .env variables
        shell: pwsh
        run: |
          Write-Host "Loading .env variables..."
          if (Test-Path ".env") {
              Get-Content .env | ForEach-Object {
                  if ($_ -match '^\s*$') { return }
                  $parts = $_ -split '=', 2
                  echo "$($parts[0])=$($parts[1])" >> $env:GITHUB_ENV
              }
          } else {
              Write-Host ".env file not found!"
              exit 1
          }

      - name: Copy files to Windows VM (via SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USERNAME }}
          password: ${{ env.VM_PASSWORD }}
          source: "./output/published/*"
          target: "C:/inetpub/wwwroot/Manatalol"

      - name: Deploy on Windows VM
        shell: pwsh
        run: |
          $secpasswd = ConvertTo-SecureString $env:VM_PASSWORD -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential ($env:VM_USERNAME, $secpasswd)

          # Connect via PowerShell remoting (HTTPS)
          $session = New-PSSession -ComputerName $env:VM_HOST `
                                   -Credential $cred `
                                   -Port 5986 `
                                   -UseSSL `
                                   -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck) `
                                   -ErrorAction Stop

          # Extract zip on remote
          Invoke-Command -Session $session -ScriptBlock {
              param($zipPath, $deployPath)
              if (!(Test-Path $deployPath)) { New-Item -ItemType Directory -Force -Path $deployPath | Out-Null }
              Expand-Archive -Path $zipPath -DestinationPath $deployPath -Force
          } -ArgumentList "C:\inetpub\wwwroot\Manatalol\*", "C:\inetpub\wwwroot\Manatalol"

          Remove-PSSession $session
          Write-Host "Deployment finished!"
